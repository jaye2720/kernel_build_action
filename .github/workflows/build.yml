name: Build 5.15 KSU+LXC+Docker Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Build kernel
        uses: dabao1955/kernel_build_action@main
        with:
          kernel-url: https://github.com/HeliumStudio-Dev/kernel_xiaomi_raphael
          kernel-branch: rikka-v2
          config: vendor/raphael_gki_defconfig
          arch: arm64
          android-version: 13
          
          # 工具链配置
          aosp-gcc: true
          aosp-clang: true
          aosp-clang-version: r487747c
          
          # 功能模块
          ksu: true
          ksu-version: v0.9.5
          lxc: true
          lxc-patch: true
          
          # 发布配置
          anykernel3: true
          release: true
          access-token: ${{ secrets.GITHUB_TOKEN }}
          
          # 完整的 Docker 支持配置
          extra-cmd: |
            # 基础命名空间支持
            echo "CONFIG_NAMESPACES=y" >> .config
            echo "CONFIG_NET_NS=y" >> .config
            echo "CONFIG_PID_NS=y" >> .config
            echo "CONFIG_IPC_NS=y" >> .config
            echo "CONFIG_UTS_NS=y" >> .config
            
            # CGroup 支持
            echo "CONFIG_CGROUPS=y" >> .config
            echo "CONFIG_CGROUP_CPUACCT=y" >> .config
            echo "CONFIG_CGROUP_DEVICE=y" >> .config
            echo "CONFIG_CGROUP_FREEZER=y" >> .config
            echo "CONFIG_CGROUP_SCHED=y" >> .config
            echo "CONFIG_CPUSETS=y" >> .config
            echo "CONFIG_MEMCG=y" >> .config
            
            # 网络支持
            echo "CONFIG_VETH=y" >> .config
            echo "CONFIG_BRIDGE=y" >> .config
            echo "CONFIG_BRIDGE_NETFILTER=y" >> .config
            echo "CONFIG_IP_NF_FILTER=y" >> .config
            echo "CONFIG_IP_NF_TARGET_MASQUERADE=y" >> .config
            echo "CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y" >> .config
            echo "CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y" >> .config
            echo "CONFIG_NETFILTER_XT_MATCH_IPVS=y" >> .config
            echo "CONFIG_NETFILTER_XT_MARK=y" >> .config
            
            # NAT 支持
            echo "CONFIG_IP_NF_NAT=y" >> .config
            echo "CONFIG_NF_NAT=y" >> .config
            echo "CONFIG_NF_NAT_IPV4=y" >> .config
            echo "CONFIG_NF_NAT_NEEDED=y" >> .config
            
            # 其他必要配置
            echo "CONFIG_KEYS=y" >> .config
            echo "CONFIG_POSIX_MQUEUE=y" >> .config
            echo "CONFIG_CGROUP_BPF=y" >> .config
            echo "CONFIG_VT=y" >> .config
            
            # 文件系统支持（Docker 需要）
            echo "CONFIG_OVERLAY_FS=y" >> .config
            echo "CONFIG_EXT4_FS_POSIX_ACL=y" >> .config
            echo "CONFIG_EXT4_FS_SECURITY=y" >> .config
            
            # 验证配置
            make ARCH=arm64 olddefconfig
